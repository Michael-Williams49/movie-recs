# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GxuL-ftUaRyBKm4jZlXTbkpnfaa5NmVM
"""



import os
print(os.listdir('/content/'))

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from scipy.sparse import csr_matrix

# Paths to the dataset files
path_to_ratings = '/content/ratings.csv' #MUST BE SET BY THE USER
path_to_movies = '/content/movies.csv'   #MUST BE SET BY THE USER


# Load the dataset
ratings = pd.read_csv(path_to_ratings)
movies = pd.read_csv(path_to_movies)

num_users = ratings['userId'].nunique()
num_movies = ratings['movieId'].nunique()

print("Number of users:", num_users)
print("Number of unique movies:", num_movies)

# Pivot the ratings DataFrame to create a user-movie matrix
user_movie_matrix = ratings.pivot(index='userId', columns='movieId', values='rating')

# Fill missing values with "NA"
user_movie_matrix = user_movie_matrix.fillna("NA")

# Now, split the user IDs for training and testing (80% train, 20% test)
train_users, test_users = train_test_split(user_movie_matrix.index, test_size=0.2, random_state=42)

# Create training and testing sets based on the split users
train_matrix = user_movie_matrix.loc[train_users]
test_matrix = user_movie_matrix.loc[test_users]
print(train_matrix)
print(test_matrix)

# Ensure that the movie IDs are consecutive integers starting from 0
movie_id_map = {old_id: new_id for new_id, old_id in enumerate(movies['movieId'].unique())}

# Map the movie IDs in the DataFrame to the new consecutive integers
movies['movieId'] = movies['movieId'].map(movie_id_map)

# Set movieId as the index (to make sure we have movie IDs as indices)
metadata = movies.set_index('movieId').sort_index()

# Save the metadata to a CSV file
metadata.to_csv('metadata.csv')

# Display the first few rows to check
print(metadata.head())

# Save data CSV files
metadata.to_csv('metadata.csv')
train_matrix.to_csv('train_matrix.csv')
test_matrix.to_csv('test_matrix.csv')